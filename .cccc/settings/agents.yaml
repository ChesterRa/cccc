actors:
  claude:
    peer:
      command: "claude --dangerously-skip-permissions"
      input_mode: "type"
      post_paste_keys: ["Enter", "Enter"]
      send_sequence: "Enter"
      idle_quiet_seconds: 1.0
      # DEPRECATED: prompt_regex will be removed in a future release; rely on smarter readiness heuristics instead.
      prompt_regex: '(?mi)^\s*(?:claude|assistant|a:|>)\s*$'
      # DEPRECATED: busy_regexes will be removed in a future release.
      busy_regexes: []
    aux:
      invoke_command: 'claude --dangerously-skip-permissions -p "{prompt}"'
      rate_limit_per_minute: 2
    capabilities: "Strong coding; no built-in web browsing; no built-in vision support"
    env_require: []

  codex:
    peer:
      command: "codex --dangerously-bypass-approvals-and-sandbox"
      input_mode: "paste"
      post_paste_keys: ["Enter"]
      send_sequence: "Enter"
      idle_quiet_seconds: 1.0
      compose_newline_key: "C-j"
      prompt_regex: '(?mi)^\s*(?:codex(?:\s*chat)?|>>>|>)\s*$'
      # DEPRECATED: busy_regexes will be removed in a future release.
      busy_regexes: []
    aux:
      invoke_command: 'codex exec --sandbox danger-full-access "{prompt}"'
      rate_limit_per_minute: 2
    capabilities: "Strong coding; multimodal input incl. images"
    env_require: []

  gemini:
    # Can be bound to Peer and Aux roles
    peer:
      command: "gemini --yolo"
      input_mode: "paste"
      post_paste_keys: ["Enter", "Enter"]
      send_sequence: "Enter"
      idle_quiet_seconds: 1.0
      # DEPRECATED: prompt_regex will be removed in a future release; rely on smarter readiness heuristics instead.
      prompt_regex: ''
      # DEPRECATED: busy_regexes will be removed in a future release.
      busy_regexes: []
    aux:
      invoke_command: 'gemini -p "{prompt}" --yolo'
      rate_limit_per_minute: 2
    capabilities: "Strong coding; Strong web-searching; Support large context; built-in image support"
    env_require: []

  droid:
    # Can be bound to Peer and Aux roles
    peer:
      command: "droid --auto high"
      input_mode: "paste"
      post_paste_keys: ["Enter"]
      send_sequence: "Enter"
      idle_quiet_seconds: 1.0
      # DEPRECATED: prompt_regex will be removed in a future release; leave empty.
      prompt_regex: ''
      # DEPRECATED: busy_regexes will be removed in a future release.
      busy_regexes: []
    aux:
      invoke_command: 'droid exec --auto high "{prompt}"'
      rate_limit_per_minute: 2
    capabilities: "Strong coding; robust auto mode; good long sessions"
    env_require: []

  opencode:
    # Can be bound to Peer and Aux roles
    peer:
      command: "opencode"
      input_mode: "paste"
      post_paste_keys: ["Enter"]
      send_sequence: "Enter"
      idle_quiet_seconds: 1.0
      # DEPRECATED: prompt_regex will be removed in a future release; leave empty.
      prompt_regex: ''
      # DEPRECATED: busy_regexes will be removed in a future release.
      busy_regexes: []
    aux:
      invoke_command: 'opencode run "{prompt}"'
      rate_limit_per_minute: 2
    capabilities: "Solid coding CLI; steady long sessions; no special env required"
    env_require: []

  kilocode:
    # Can be bound to Peer and Aux roles
    peer:
      command: "kilocode"
      input_mode: "paste"
      post_paste_keys: ["Enter"]
      send_sequence: "Enter"
      idle_quiet_seconds: 1.0
      prompt_regex: ''
      busy_regexes: []
    aux:
      invoke_command: 'kilocode --auto "{prompt}"'
      rate_limit_per_minute: 2
    capabilities: "AI-powered coding assistant with autonomous capabilities"
    env_require: []

  copilot:
    # Can be bound to Peer and Aux roles (GitHub Copilot CLI)
    peer:
      command: "copilot"
      input_mode: "paste"
      post_paste_keys: ["Enter"]
      send_sequence: "Enter"
      idle_quiet_seconds: 1.0
      prompt_regex: ''
      busy_regexes: []
    aux:
      invoke_command: 'copilot -p "{prompt}" --allow-all-tools'
      rate_limit_per_minute: 2
    capabilities: "GitHub Copilot CLI with tool access; strong coding; integrated with GitHub"
    env_require: []

  auggie:
    # Can be bound to Peer and Aux roles (Auggie CLI)
    peer:
      command: "auggie"
      input_mode: "paste"
      post_paste_keys: ["Enter"]
      send_sequence: "Enter"
      idle_quiet_seconds: 1.0
      prompt_regex: ''
      busy_regexes: []
    aux:
      invoke_command: 'auggie --print "{prompt}"'
      rate_limit_per_minute: 2
    capabilities: "Augment Code AI assistant; solid coding support; lightweight"
    env_require: []

  cursor:
    # Can be bound to Peer and Aux roles (Cursor CLI)
    peer:
      command: "cursor-agent"
      input_mode: "paste"
      post_paste_keys: ["Enter"]
      send_sequence: "Enter"
      idle_quiet_seconds: 1.0
      prompt_regex: ''
      busy_regexes: []
    aux:
      invoke_command: 'cursor-agent -p "{prompt}"'
      rate_limit_per_minute: 2
    capabilities: "Cursor AI agent; strong coding; editor-integrated experience"
    env_require: []

# Note: Bindings (which actor each role uses) live in cli_profiles.yaml under roles.*.actor
